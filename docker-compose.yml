services:
  nextjs:
    build:
      context: ./front
      dockerfile: Dockerfile
    container_name: nextjs
    develop:
      watch:
        - path: ./front/
          action: rebuild
    ports:
      - "3000:3000"
    depends_on:
      auth:
        condition: service_healthy
    env_file:
      - ./front/.env # Remettre .env.local quand on travaille en local et remettre .env pour la prod
  api-gateway:
    build:
      context: ./back/API_Gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    develop:
      watch:
        - path: ./back/API_Gateway/
          target: /app/
          action: sync
        - path: ./back/API_Gateway/package.json
          action: rebuild
    env_file:
      - ./back/API_Gateway/.env
    depends_on:
      auth:
        condition: service_healthy
      articles:
        condition: service_started
      posts:
        condition: service_started
      comments:
        condition: service_started
    ports:
      - "8080:8080"
  auth:
    build:
      context: ./back/Auth
      dockerfile: Dockerfile
    container_name: auth
    develop:
      watch:
        - path: ./back/Auth/
          target: /app/
          action: sync
        - path: ./back/Auth/package.json
          action: rebuild
    env_file:
      - ./back/Auth/.env
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://auth:8081/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - authDb
  articles:
    build:
      context: ./back/Articles
      dockerfile: Dockerfile
    container_name: article
    volumes:
      - ./uploads:/app/uploads
    develop:
      watch:
        - path: ./back/Articles/
          target: /app/
          action: sync
        - path: ./back/Articles/package.json
          action: rebuild
    env_file:
      - ./back/Articles/.env
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://article:8082/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - articleDb
  comments:
    build:
      context: ./back/Comments
      dockerfile: Dockerfile
    container_name: comment
    develop:
      watch:
        - path: ./back/Comments/
          target: /app/
          action: sync
        - path: ./back/Comments/package.json
          action: rebuild
    env_file:
      - ./back/Comments/.env
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://comment:8083/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - commentDb
  posts:
    build:
      context: ./back/Posts
      dockerfile: Dockerfile
    container_name: post
    volumes:
      - ./uploads:/app/uploads
    develop:
      watch:
        - path: ./back/Posts/
          target: /app/
          action: sync
        - path: ./back/Posts/package.json
          action: rebuild
    env_file:
      - ./back/Posts/.env
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://post:8084/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - postDb

  authDb:
    image: mongo:latest
    container_name: authDb
    volumes:
      - db_data_auth:/data/db
    ports:
      - "27018:27017"
  articleDb:
    image: mongo:latest
    container_name: articleDb
    volumes:
      - db_data_article:/data/db
    ports:
      - "27019:27017"
  commentDb:
    image: mongo:latest
    container_name: commentDb
    volumes:
      - db_data_comment:/data/db
    ports:
      - "27020:27017"
  postDb:
    image: mongo:latest
    container_name: postDb
    volumes:
      - db_data_post:/data/db
    ports:
      - "27021:27017"


volumes:
  db_data_auth:
  db_data_article:
  db_data_comment:
  db_data_post: